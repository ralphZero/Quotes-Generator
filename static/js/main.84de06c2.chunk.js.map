{"version":3,"sources":["components/Quote.module.css","components/Quote.js","components/Navbar.js","components/Home.js","components/Author.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Quote","author","quotes","show","className","sheet","quoteAuthor","to","quoteGenre","list","map","quote","quoteBox","quoteText","container","Navbar","name","onNewRandomQuote","onback","first","onClick","style","fontSize","last","Home","state","randomQuote","handleNewRandomQuote","getRandomQuote","then","result","data","console","log","setState","this","axios","get","params","limit","page","Math","floor","random","Component","Author","handleBackPressed","props","history","push","match","getQuotes","paddingTop","paddingBottom","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84de06c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Quote_container__3Blso\",\"quoteBox\":\"Quote_quoteBox__2wxRL\",\"quoteAuthor\":\"Quote_quoteAuthor__1sulN\"};","import React from 'react';\nimport sheet from './Quote.module.css';\nimport { Link } from 'react-router-dom';\n\nconst Quote = ({author = false, quotes}) => {\n\n    const show = author ? null : (\n        <Link className={sheet.quoteAuthor} to={'/'+quotes[0].quoteAuthor}>\n            <div>\n                {quotes[0].quoteAuthor}\n                <small>{quotes[0].quoteGenre}</small>\n            </div>\n            <span className='material-icons'>arrow_right_alt</span>\n        </Link>\n    );\n\n     const list = quotes.map((quote) => {\n         return (\n            <div className={sheet.quoteBox}>\n                {quote.quoteText}\n            </div>\n         )\n     })\n\n    return (\n        <div className={sheet.container}>\n            { list }\n            { show }\n        </div>\n    );\n}\n\nexport default Quote;\n","import React from 'react';\n\nconst Navbar = ({author = false, name, onNewRandomQuote, onback }) => {\n\n    const first = author ? (\n        <div>\n            <button className='btn btn-arrow' onClick={ () => onback() }>\n                <span className='material-icons' style={{fontSize : 18}}>arrow_back</span>\n            </button>\n            <span>{ name }</span>\n        </div>\n    ) : null;\n\n    const last = !author ? (\n        <button onClick={() => onNewRandomQuote()} className='btn btn-white'>\n            Random\n            <span className='material-icons'>sync</span>\n        </button>\n    ) : null;\n\n    return (\n        <nav>\n            {first}\n            {last}\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Quote from './Quote';\nimport Navbar from \"./Navbar\";\nclass Home extends Component {\n\n    componentDidMount() {\n        this.getRandomQuote().then((result) => {\n            const data = result.data.data;\n            console.log(data.quoteText);\n            this.setState({\n                randomQuote: data\n            });\n        })\n    }\n\n    state = {\n        randomQuote: null\n    }\n\n    async getRandomQuote() {\n        return await axios\n            .get('https://quote-garden.herokuapp.com/api/v3/quotes', {\n                params: {\n                    limit: 1,\n                    page: Math.floor(Math.random() * 72672)\n                }\n            });\n    }\n\n    handleNewRandomQuote = () => {\n        this.getRandomQuote().then((result) => {\n            const data = result.data.data;\n            console.log(data);\n            this.setState({\n                randomQuote: data\n            });\n        })\n    }\n\n    render() {\n        const show = this.state.randomQuote === null ? (<span>Loading...</span>) : (<Quote quotes={this.state.randomQuote} />);\n        return (\n            <>\n                <Navbar onNewRandomQuote={this.handleNewRandomQuote} />\n                <section>\n                    { show }\n                </section>\n                <footer>\n                    Ralph Placide @ DevChallenges.io\n                </footer>\n            </>\n        );\n    }\n}\n\nexport default Home;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Quote from './Quote';\nimport Navbar from \"./Navbar\";\nclass Author extends Component {\n\n    componentDidMount() {\n        let author = this.props.match.params.author;\n        this.getQuotes(author).then((result) => {\n            const data = result.data.data;\n            this.setState({\n                quotes: data\n            });\n        })\n    }\n\n    state = {\n        quotes: null\n    }\n\n    async getQuotes(author) {\n        return await axios\n            .get('https://quote-garden.herokuapp.com/api/v3/quotes', {\n                params: {\n                    author: author\n                }\n            });\n    }\n\n    handleBackPressed = () => {\n        this.props.history.push('/');\n    }\n\n    render() {\n        const show = this.state.quotes === null ?\n            (<span>Loading...</span>) :\n            (<Quote author quotes={this.state.quotes} />);\n\n        return (\n            <>\n                <Navbar name={ this.props.match.params.author } author onback={this.handleBackPressed}/>\n                <section style={{paddingTop : 20, paddingBottom : 20}}>\n                    {show}\n                </section>\n                <footer>\n                    Ralph Placide @ DevChallenges.io\n                </footer>\n            </>\n        );\n    }\n}\n\nexport default Author;\n","import React, { Component } from \"react\";\nimport { HashRouter, Switch} from \"react-router-dom\";\nimport { Route } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Home from './components/Home';\nimport Author from './components/Author';\n\nclass App extends Component {\n\n  render() {\n    \n    return (\n      <>\n        <HashRouter>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/:author' component={Author} />\n          </Switch>\n        </HashRouter>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}